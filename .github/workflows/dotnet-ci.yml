name: .NET Build & Test

on:
  push:
    branches: ['**']          # ← run on all branches
  pull_request:
    branches: ['**']          # ← run for PRs targeting any branch
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        dotnet: [ '8.0.x' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            # Windows
            ~\AppData\Local\NuGet\Cache
            # Linux
            ~/.local/share/NuGet/Cache
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.sln', '**/*.csproj', '**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore AzureBatchJobAutomation.sln

      - name: Build (Release)
        run: dotnet build AzureBatchJobAutomation.sln --no-restore --configuration Release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts-${{ matrix.os }}
          path: |
            **/bin/Release/
            **/obj/Release/
          retention-days: 1

  test:
    needs: build
    name: Run Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        dotnet: [ '8.0.x' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts-${{ matrix.os }}

      - name: Run Tests
        run: |
          dotnet test Tests/*.cs --logger "trx;LogFileName=test-results.trx" --logger "console;verbosity=detailed" --configuration Release
        continue-on-error: true

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Results (${{ matrix.os }})
          path: "**/test-results.trx"
          reporter: dotnet-trx
          fail-on-error: false

      - name: Generate Test Summary
        if: success() || failure()
        run: |
          echo "## Test Results Summary for ${{ matrix.os }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed: $(grep -c "outcome=\"Passed\"" **/test-results.trx)" >> $GITHUB_STEP_SUMMARY
          echo "❌ Failed: $(grep -c "outcome=\"Failed\"" **/test-results.trx)" >> $GITHUB_STEP_SUMMARY
          echo "⏭️ Skipped: $(grep -c "outcome=\"Skipped\"" **/test-results.trx)" >> $GITHUB_STEP_SUMMARY

   